// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Synonym.Infra.Context;

#nullable disable

namespace Synonym.Infra.Migrations
{
    [DbContext(typeof(SynonymDbContext))]
    partial class SynonymDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0-preview.3.22175.1");

            modelBuilder.Entity("Synonym.Core.Models.Synonym", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Word1Id")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Word2Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Word1Id");

                    b.HasIndex("Word2Id");

                    b.ToTable("Synonyms");
                });

            modelBuilder.Entity("Synonym.Core.Models.Word", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Value")
                        .IsUnique();

                    b.ToTable("Words");
                });

            modelBuilder.Entity("Synonym.Core.Models.Synonym", b =>
                {
                    b.HasOne("Synonym.Core.Models.Word", "Word1")
                        .WithMany()
                        .HasForeignKey("Word1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Synonym.Core.Models.Word", "Word2")
                        .WithMany()
                        .HasForeignKey("Word2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Word1");

                    b.Navigation("Word2");
                });
#pragma warning restore 612, 618
        }
    }
}
